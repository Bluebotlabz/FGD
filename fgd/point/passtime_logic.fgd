@PointClass base(BaseEntityPoint) 
	appliesto(TF2) 
	iconsprite("editor/passtime_master.vmt") = passtime_logic: "Passtime Logic"
	[
	num_sections(integer) : "Number of sections" : 0
	ball_spawn_countdown(integer) : "Ball spawn countdown duration in seconds" : 15
	max_pass_range(float) : "Max Pass Range" : 0 : "0 means unlimited."

	// Inputs
	input SpawnBall(void) : "With a countdown, pick a random enabled info_passtime_ball_spawn and spawn a ball there."
	input SetSection(string) : "Parameter must be three values - [section number] [name of first track_path] [name of last track_path]"
	input TimeUp(void) : "Input this from a round timer or something to indicate the game timer ended with no winner."
	input SpeedBoostUsed(void) : "For stats tracking."
	input JumpPadUsed(void) : "For stats tracking."
	input statica(void) : "???"
	input staticb(void) : "???"
	input staticc(void) : "???"
	input RoomTriggerOnTouch(void) : "???"

	// Outputs
	output OnBallFree(void) : "The ball is free - someone was holding it, and now they aren't."
	output OnBallGetBlu(void) : "The ball was free and someone picked it up."
	output OnBallGetRed(void) : "The ball was free and someone picked it up."
	output OnBallGetAny(void) : "The ball was free and someone picked it up."
	output OnBallRemoved(void) : "The ball was removed by game rules and you should respawn it. (e.g. fell out of the world (func_passtime_goal with -1 points))."
	output OnScoreBlu(void) : "BLU scored."
	output OnScoreRed(void) : "RED scored."
	output OnScoreAny(void)
	output OnBallPowerUp(void) : "Experimental"
	output OnBallPowerDown(void) : "Experimental"
	]
